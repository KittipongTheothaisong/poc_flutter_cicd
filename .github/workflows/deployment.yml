name: Deployment

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    name: Deploy dev
    runs-on: ubuntu-22.04
    environment: ${{ inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          fetch-depth: 0
          fetch-tags: true
          ssh-key: ${{ secrets.DEPLOYMENT_SSH_KEY }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: "temurin"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ vars.FLUTTER_VERSION }}

      - name: Run Test
        run: |
          flutter pub get
          flutter analyze
          flutter test

      - name: Bump version
        run: |
          flutter pub get
          dart run cider bump build
          git add pubspec.yaml
          git commit -m "bumped version to $(dart run cider version)"

      - name: Generate release notes
        run: |
          git log --pretty="format:%b" --merges latest-build...HEAD > ./release_notes.txt
          cat ./release_notes.txt

      - name: Build APK
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release --flavor ${{ vars.FLAVOR }} -t lib/main_${{ vars.FLAVOR }}.dart

      - name: Upload to Firebase app distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ vars.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIAL_CONTENT }}
          groups: bid_tester
          file: build/app/outputs/apk/${{ vars.FLAVOR }}/release/app-${{ vars.FLAVOR }}-release.apk
          releaseNotesFile: release_notes.txt

      - name: Update app version
        run: git push

      - name: Update latest build tag
        run: |
          git tag -f latest-build
          git push -f origin latest-build
